import{_ as s,c as a,o as n,b as l}from"./app.a2043e60.js";const e="/hm-docs/assets/image-20220706182727310.79ebb864.png",m=JSON.parse('{"title":"TypeScript 起步","description":"","frontmatter":{},"headers":[{"level":2,"title":"TypeScript 介绍","slug":"intro","link":"#intro","children":[]},{"level":2,"title":"TypeScript 作用","slug":"effect","link":"#effect","children":[]},{"level":2,"title":"TypeScript 编译","slug":"compile","link":"#compile","children":[]},{"level":2,"title":"创建 vue-ts 项目","slug":"vue-ts","link":"#vue-ts","children":[]}],"relativePath":"ts/index.md","lastUpdated":1672824080000}'),p={name:"ts/index.md"},t=l('<h1 id="typescript-起步" tabindex="-1">TypeScript 起步 <a class="header-anchor" href="#typescript-起步" aria-hidden="true">#</a></h1><h2 id="intro" tabindex="-1">TypeScript 介绍 <a class="header-anchor" href="#intro" aria-hidden="true">#</a></h2><blockquote><p>知道：TS是带类型语法的JS</p></blockquote><p>官方网站：<a href="https://www.typescriptlang.org/" target="_blank" rel="noreferrer">https://www.typescriptlang.org/</a></p><p><s>中文官网：</s> <a href="https://www.tslang.cn/" target="_blank" rel="noreferrer">https://www.tslang.cn/</a></p><p><img src="'+e+`" alt="image-20220706182727310"></p><p><code>TypeScript</code> 是一种带有 <code>类型语法</code> 的 JavaScript 语言，在任何使用 JavaScript 的开发场景中都可以使用。</p><p>JavaScript 代码</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 没有明确的类型</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> age </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">18</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>TypeScript 代码</p><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 有明确的类型，可以指定age是number类型(数值类型)</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> age</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">number</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">18</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>注意：TS 需要编译才能在浏览器运行。</p><p>总结：TS 是 JS 的超集，支持了JS 语法和扩展了类型语法。</p><h2 id="effect" tabindex="-1">TypeScript 作用 <a class="header-anchor" href="#effect" aria-hidden="true">#</a></h2><blockquote><p>知道：TS作用是在编译时进行类型检查提示错误</p></blockquote><p>发现：</p><ul><li>在程序运行的时候 <code>Uncaught TypeError</code> 这个错误挺常见的</li><li>这些错误导致在开发项目的时候，需要花挺多的时间去定位和处理 BUG</li></ul><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> num </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">18</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">num</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">toLowerCase</span><span style="color:#A6ACCD;">() </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// Uncaught TypeError: num.toLowerCase is not a function</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>原因：</p><ul><li>JS 是动态类型的编程语言，动态类型最大的特点就是它只能在 <code>代码执行</code> 期间做类型的相关检查，所以往往你发现问题的时候，已经晚了。</li></ul><p>方案：</p><ul><li>TS 是静态类型的编程语言，代码会先进行编译然后去执行，在 <code>代码编译</code> 期间做类型的相关检查，如果有问题编译是不通过的，也就暴露出了问题。</li><li>配合 VSCode 等开发工具，TS 可以提前到在 <code>编写代码</code> 的时候就能发现问题，更准确更快的处理错误。</li></ul><p>TS 优势：</p><ul><li>更早发现错误，提高开发效率</li><li>随时随地提示，增强开发体验</li><li>强大类型系统，代码可维护性更好，重构代码更容易</li><li>类型推断机制，减少不必要类型注解，让编码更简单</li><li>最后：Vue3源码TS重写，React和TS完美配合，Angular默认支持TS，大中型前端项目首选。</li></ul><p><code>Vue3 + TS</code> 最新的开发技术栈，你还在等什么？</p><h2 id="compile" tabindex="-1">TypeScript 编译 <a class="header-anchor" href="#compile" aria-hidden="true">#</a></h2><blockquote><p>知道：如何使用 tsc 编译 ts 代码</p></blockquote><p>全局安装：</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># npm 安装</span></span>
<span class="line"><span style="color:#FFCB6B;">npm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">i</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-g</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">typescript</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># yarn 安装</span></span>
<span class="line"><span style="color:#FFCB6B;">yarn</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">global</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">add</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">typescript</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 部分mac电脑安装需要sudo权限</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># sudo npm i -g typescript</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># sudo yarn global add typescript</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>查看版本：</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#FFCB6B;">tsc</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-v</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>编译 TS：</p><ul><li>新建 <code>hello.ts</code> 文件</li><li>当前目录打开命令行窗口，执行 <code>tsc hello.ts</code> 命令，同级目录生成 <code>hello.js</code> 文件</li><li>执行 <code>node hello.js</code> 验证一下</li></ul><p>思考：</p><ul><li>以后我们写 ts 都是手动的编译执行吗？ <ul><li>在开发中：一般使用 <code>webpack</code> <code>vite</code> 等工具自动构建编译。</li></ul></li></ul><h2 id="vue-ts" tabindex="-1">创建 vue-ts 项目 <a class="header-anchor" href="#vue-ts" aria-hidden="true">#</a></h2><blockquote><p>创建一个基于 ts 的 vue 项目，来学习 ts 语法</p></blockquote><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># npm 6.x</span></span>
<span class="line"><span style="color:#FFCB6B;">npm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">create</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">vite@latest</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">my-vue-ts-app</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--template</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">vue-ts</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># npm 7+, extra double-dash is needed:</span></span>
<span class="line"><span style="color:#FFCB6B;">npm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">create</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">vite@latest</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">my-vue-ts-app</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--template</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">vue-ts</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># yarn</span></span>
<span class="line"><span style="color:#FFCB6B;">yarn</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">create</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">vite</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">my-vue-ts-app</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--template</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">vue-ts</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># pnpm</span></span>
<span class="line"><span style="color:#FFCB6B;">pnpm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">create</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">vite</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">my-vue-ts-app</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--template</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">vue-ts</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>在基于 vite 的项目中可以直接验证 ts 代码结果，因为已经配置好了 ts 环境。</p>`,39),o=[t];function c(r,i,y,d,C,u){return n(),a("div",null,o)}const A=s(p,[["render",c]]);export{m as __pageData,A as default};
